[ This contains a VERY simple check for the three common bit sizes.
  It's the original version for the Bitwidth.b test program.
  In addition a check has been added on the start to check
  for really large, or non-binary, cells.
]
[-]>[-]
++++  [<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>-]
     <[>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<-]
     >[<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>-]
     <[>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<-]
     >[<++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>>+<-]
+< [>>[-<<
	----------------------------------------------------------------
    >>]<<
    [-]>[-]+++++++++++++[<++++++>-]<.>++++++++[<++++>-]<+.-.>++++++++[<-----
    --->-]<-.>+++++++++[<++++++>-]<-.+++++++.+++++.-------------.>++++[<++++
    >-]<+.+++++++.[-]++++++++[>++++<-]>.<++++++++++[>++++++++<-]>-.+++.[-]++
    ++++++[<++++>-]<.>+++++++++[<++++++++>-]<.+++++++++++++.--------------.-
    -.[-]++++++++[>++++<-]>.<+++++++++++[>++++++<-]>+.++.+++++++..+++++++.<+
    +++++++++[>-------<-]>+.[-]++++++++++.[-]<
]>[[-]>[-]<
// Calculate the value 256 and test if it's zero
++++++++[>++++++++<-]>[<++++>-]
+<[>-<
    // Not zero so multiply by 256 again to get 65536
    [>++++<-]>[<++++++++>-]<[>++++++++<-]
    +>[>
        // Print "32"
        ++++++++++[>+++++<-]>+.-.[-]<
    <[-]<->] <[>>
        // Print "16"
        +++++++[>+++++++<-]>.+++++.[-]<
<<[-]]] >[>
    // Print "8"
    ++++++++[>+++++++<-]>.[-]<
<[-]]<
// Print " bit cells\n"
+++++++++++[>+++>+++++++++>+++++++++>+<<<<-]>-.>-.+++++++.+++++++++++.<.
>>.++.+++++++..<-.>>-
Clean up used cells.
[-]<[-]<[-]<[-]<
]
